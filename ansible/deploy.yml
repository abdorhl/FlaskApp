---
- name: Deploy Flask Application
  hosts: web_servers
  become: yes
  
  vars:
    app_name: flask_app
    app_user: flask
    app_group: flask
    app_directory: /opt/flask_app
    venv_path: "{{ app_directory }}/venv"
    repo_url: https://github.com/abdorhl/FlaskApp.git
    temp_clone_dir: /tmp/flask_app_temp

  tasks:
    - name: Update apt cache
      apt:
        update_cache: yes
        cache_valid_time: 3600

    - name: Install system dependencies
      apt:
        name:
          - python3
          - python3-pip
          - python3-venv
          - ufw
          - git
        state: present

    - name: Configure firewall
      ufw:
        rule: allow
        port: "{{ item }}"
        proto: tcp
      loop:
        - '80'
        - '443'
        - '5000'

    - name: Enable UFW
      ufw:
        state: enabled
        policy: deny

    - name: Create application user
      user:
        name: "{{ app_user }}"
        system: yes
        createhome: no
        shell: /bin/false

    - name: Remove existing application directory
      file:
        path: "{{ app_directory }}"
        state: absent

    - name: Remove temporary clone directory
      file:
        path: "{{ temp_clone_dir }}"
        state: absent

    - name: Clone repository to temporary location
      git:
        repo: "{{ repo_url }}"
        dest: "{{ temp_clone_dir }}"
        version: main

    - name: Create application directory
      file:
        path: "{{ app_directory }}"
        state: directory
        owner: "{{ app_user }}"
        group: "{{ app_group }}"
        mode: '0755'

    - name: Sync repository files to application directory
      synchronize:
        src: "{{ temp_clone_dir }}/"
        dest: "{{ app_directory }}"
        delete: yes
        recursive: yes
      delegate_to: "{{ inventory_hostname }}"

    - name: Set application directory permissions
      file:
        path: "{{ app_directory }}"
        owner: "{{ app_user }}"
        group: "{{ app_group }}"
        recurse: yes

    - name: Setup Python virtual environment
      pip:
        requirements: "{{ app_directory }}/requirements.txt"
        virtualenv: "{{ venv_path }}"
        virtualenv_command: python3 -m venv

    - name: Copy systemd service file
      copy:
        src: flask-app.service
        dest: /etc/systemd/system/
        mode: '0644'

    - name: Reload systemd
      systemd:
        daemon_reload: yes

    - name: Start and enable Flask application service
      systemd:
        name: flask-app
        state: restarted
        enabled: yes

    - name: Wait for application to start
      uri:
        url: http://localhost:5000/health
        return_content: yes
      register: health_check
      until: health_check.status == 200
      retries: 12
      delay: 5

    - name: Cleanup temporary directory
      file:
        path: "{{ temp_clone_dir }}"
        state: absent
